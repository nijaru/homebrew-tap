name: Update Formula

on:
  repository_dispatch:
    types: [release-published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update to (e.g., 0.1.12)'
        required: true
        type: string

jobs:
  update-formula:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout tap repository
        uses: actions/checkout@v4

      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            VERSION="${{ github.event.client_payload.version }}"
          else
            VERSION="${{ inputs.version }}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Updating to version: ${VERSION}"

      - name: Download binaries and calculate SHA256
        id: binaries
        run: |
          VERSION="${{ steps.version.outputs.version }}"

          # Download ARM64 macOS binary
          ARM64_URL="https://github.com/nijaru/kombrucha/releases/download/v${VERSION}/bru-aarch64-apple-darwin.tar.gz"
          echo "Downloading ${ARM64_URL}"
          ARM64_SHA256=$(curl -sL "${ARM64_URL}" | shasum -a 256 | cut -d' ' -f1)
          echo "arm64_sha256=${ARM64_SHA256}" >> $GITHUB_OUTPUT
          echo "ARM64 SHA256: ${ARM64_SHA256}"

          # Download x86_64 macOS binary
          X86_64_URL="https://github.com/nijaru/kombrucha/releases/download/v${VERSION}/bru-x86_64-apple-darwin.tar.gz"
          echo "Downloading ${X86_64_URL}"
          X86_64_SHA256=$(curl -sL "${X86_64_URL}" | shasum -a 256 | cut -d' ' -f1)
          echo "x86_64_sha256=${X86_64_SHA256}" >> $GITHUB_OUTPUT
          echo "x86_64 SHA256: ${X86_64_SHA256}"

      - name: Update formula
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          ARM64_SHA256="${{ steps.binaries.outputs.arm64_sha256 }}"
          X86_64_SHA256="${{ steps.binaries.outputs.x86_64_sha256 }}"

          # Update version
          sed -i "s/version \"[0-9.]*\"/version \"${VERSION}\"/" Formula/bru.rb

          # Update ARM64 URL and SHA256
          sed -i "0,/releases\/download\/v[0-9.]*\/bru-aarch64-apple-darwin.tar.gz/s||releases/download/v${VERSION}/bru-aarch64-apple-darwin.tar.gz|" Formula/bru.rb
          sed -i "0,/sha256 \".*\"/s||sha256 \"${ARM64_SHA256}\"|" Formula/bru.rb

          # Update x86_64 URL and SHA256
          sed -i "0,/releases\/download\/v[0-9.]*\/bru-x86_64-apple-darwin.tar.gz/s||releases/download/v${VERSION}/bru-x86_64-apple-darwin.tar.gz|" Formula/bru.rb
          sed -i "0,/sha256 \".*\"/s||sha256 \"${X86_64_SHA256}\"|" Formula/bru.rb

          echo "Formula updated to v${VERSION}"
          cat Formula/bru.rb

      - name: Commit and push changes
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/bru.rb

          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit - formula already at v${VERSION}"
          else
            git commit -m "chore: update formula to v${VERSION}"
            git push
            echo "âœ“ Formula updated to v${VERSION}"
          fi
